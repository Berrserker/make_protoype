# This file contains all available configuration options
# with their default values.

# options for analysis running
run:
    # default concurrency is a available CPU number
    concurrency: 4
    
    # timeout for analysis, e.g. 30s, 5m, default is 1m
    timeout: 1m
    
    # exit code when at least one issue was found, default is 1
    issues-exit-code: 1
    
    # include test files or not, default is true
    tests: true
    
    # list of build tags, all linters use it. Default is empty list.
    #  build-tags:
    #    - mytag
    
    # which dirs to skip: issues from them won't be reported;
    # can use regexp here: generated.*, regexp is applied on full path;
    # default value is empty list, but default dirs are skipped independently
    # from this option's value (see skip-dirs-use-default).
    # "/" will be replaced by current OS file path separator to properly work
    # on Windows.
    skip-dirs:
        - src/external_libs
        - autogenerated_by_my_lib
        - github.com/restream/reindexer
    
    # default is true. Enables skipping of directories:
    #   vendor$, third_party$, testdata$, examples$, Godeps$, builtin$
    skip-dirs-use-default: true
    
    # which files to skip: they will be analyzed, but issues from them
    # won't be reported. Default value is empty list, but there is
    # no need to include all autogenerated files, we confidently recognize
    # autogenerated files. If it's not please let us know.
    # "/" will be replaced by current OS file path separator to properly work
    # on Windows.
    skip-files:
        - ".*\\.my\\.go$"
        - lib/bad.go
    
    # by default isn't set. If set we pass it to "go list -mod={option}". From "go help modules":
    # If invoked with -mod=readonly, the go command is disallowed from the implicit
    # automatic updating of go.mod described above. Instead, it fails when any changes
    # to go.mod are needed. This setting is most useful to check that go.mod does
    # not need updates, such as in a continuous integration and testing system.
    # If invoked with -mod=vendor, the go command assumes that the vendor
    # directory holds the correct copies of dependencies and ignores
    # the dependency descriptions in go.mod.
    modules-download-mode: mod
    
    # Allow multiple parallel golangci-lint instances running.
    # If false (default) - golangci-lint acquires file lock on start.
    allow-parallel-runners: false
# output configuration options
output:
    # colored-line-number|line-number|json|tab|checkstyle|code-climate|junit-xml|github-actions
    # default is "colored-line-number"
    format: colored-line-number
    
    # print lines of code with issue, default is true
    print-issued-lines: true
    
    # print linter name in the end of issue text, default is true
    print-linter-name: true
    
    # make issues output unique by line, default is true
    uniq-by-line: true
    
    # add a prefix to the output file references; default is no prefix
    path-prefix: ""
    
    # sorts results by: filepath, line and column
    sort-results: false


linters:
    # please, do not use `enable-all`: it's deprecated and will be removed soon.
    # inverted configuration with `enable-all` and `disable` is not scalable during updates of golangci-lint
    disable-all: true
    enable:
        # описание плагинов можно найти по адресу: https://golangci-lint.run/usage/linters/
        - bodyclose
        - deadcode
        - depguard
        - dogsled
        #    - dupl
        - errcheck
        - exhaustive
        - gochecknoinits
        - goconst
        - gocritic
        - gocyclo
        - gofmt
        - goimports
        - gomnd
        - revive
        - exportloopref
        - goprintffuncname
        - gosec
        - gosimple
        - govet
        - ineffassign
        - interfacer
        - misspell
        - nakedret
        - noctx
        # - nolintlint
        - rowserrcheck
        - exportloopref
        - staticcheck
        - structcheck
        - stylecheck
        - typecheck
        - unconvert
        - unparam
        - unused
        - varcheck
        - whitespace
        - nlreturn
        - prealloc
        - wsl
        - nestif
#    - exhaustivestruct

linters-settings:
    govet:
        check-shadowing: true
        enable:
            - fieldalignment
    
    gocritic:
        # Which checks should be enabled; can't be combined with 'disabled-checks';
        # See https://go-critic.github.io/overview#checks-overview
        # To check which checks are enabled run `GL_DEBUG=gocritic golangci-lint run`
        # By default list of stable checks is used.
        enabled-checks:
            - commentFormatting
            - appendCombine
            - argOrder
            - builtinShadow
            - commentedOutImport
            - elseif
            - equalFold
            - ifElseChain
            - mapKey
            - sloppyReassign
            - unslice
            - weakCond
            - wrapperFunc
            - yodaStyleExpr
issues:
    exclude-rules:
        -   path: _test\.go
            linters:
                - dupl
                - gosec
                - funlen
                - lll
                - gochecknoinits
                - exhaustivestruct
        -   linters:
                - stylecheck
            text: "ST1003:"
        -   linters:
                - golint
                - revive
            text: "don't use an underscore in package name"
        -   path: github.com/restream/reindexer/bindings/builtin
            text: "inspect: failed to load package builtin: could not load export data: no export data for "
        -   linters:
                - govet
            path: '.go'
            text: "fieldalignment: struct with"
        -   linters:
                - govet
            path: '.go'
            text: "fieldalignment: struct of size"

